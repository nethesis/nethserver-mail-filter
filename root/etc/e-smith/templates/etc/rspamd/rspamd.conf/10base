.include "$CONFDIR/common.conf"

options \{
    pidfile = "$RUNDIR/rspamd.pid";
{
    use esmith::NetworksDB;
    my $ndb = esmith::NetworksDB->open_ro();

    #return a cidr for localnetwork
    foreach (map {
        my ($addr, $mask) = split('/', $_);
        esmith::util::computeLocalNetworkShortSpec($addr, $mask || '255.255.255.255');
             } $ndb->local_access_spec() ) {

        $CIDR .= sprintf("%s, ", $_);
    }

    $OUT = "local_addrs = \"$CIDR ::1\";";
}

    .include(try=true; priority=1,duplicate=merge) "$CONFDIR/options.inc"
\}

logging \{
    type = "file";
    filename = "$LOGDIR/rspamd.log";
    .include "$CONFDIR/logging.inc"
    .include(try=true; priority=1,duplicate=merge) "$LOCAL_CONFDIR/local.d/logging.inc"
    .include(try=true; priority=10) "$LOCAL_CONFDIR/override.d/logging.inc"
\}

worker \{
    # socket for worker-normal
    bind_socket = "/var/run/rspamd/worker-normal mode=0770 owner=_rspamd group=mail";
    # number of worker
    count = {$rspamd{MaxProcesses} || '1'}

    .include(try=true; priority=1,duplicate=merge) "$CONFDIR/worker-normal.inc"
\}

worker \{
{
use NethServer::Password;
use esmith::ConfigDB;

my $db = esmith::ConfigDB->open;
my $password = NethServer::Password::store('rspamd');
my $worker = $rspamd{MaxProcesses} || '1';

#store the password to db but not use it
#trick to read it in the server-manager
$db->set_prop('rspamd','password',"$password");

$OUT .= qq (

    # socket for worker-controller
    #the port is controlled by the ns firewall
    bind_socket = "*:11334";

    #password for the web UI
    password = "$password";
    enable_password = "$password";

    # number of worker
    count = $worker;
);
}
    .include(try=true; priority=1,duplicate=merge) "$CONFDIR/worker-controller.inc" 
\}

worker "rspamd_proxy" \{
    # socket for worker-normal
    bind_socket = "/var/run/rspamd/worker-proxy mode=0770 owner=_rspamd group=mail";

    # enable the 'simple' proxy mode
    milter = yes; # Enable milter mode
    timeout = 120s; # Needed for Milter usually
    upstream "local" \{
    default = yes; # Self-scan upstreams are always default
    self_scan = yes; # Enable self-scan
    \}

    # number of worker
    count = {$rspamd{MaxProcesses} || '1'}


    .include(try=true; priority=1,duplicate=merge) "$CONFDIR/worker-proxy.inc" 
\}


worker \{
    # socket for worker-fuzzy
    #bind_socket = "/var/run/rspamd/worker-fuzzy mode=0770 owner=_rspamd group=mail";
    bind_socket = "localhost:11335";

    # Number of processes to serve this storage (useful for read scaling)
    count = {$rspamd{MaxProcesses} || '1'}

    # Backend
    backend = "redis";

    # Hashes storage time (3 months)
    expire = 90d;

    # Synchronize updates to the storage each minute
    sync = 1min;

    #Access control setup
    allow_update = ["127.0.0.1"];

    .include(try=true; priority=1,duplicate=merge) "$CONFDIR/worker-fuzzy.inc" 
\}

#init log_helper for fan module https://rspamd.com/doc/modules/fann.html#configuration
worker "log_helper" \{
  count = 1;
\}
